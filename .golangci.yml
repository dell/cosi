run:
  # The default concurrency value is the number of available CPU.
  concurrency: 4
  
  # Timeout for analysis, e.g. 30s, 5m.
  timeout: 5m

  # Exit code when at least one issue was found.
  # Default: 1
  issue-exit-code: 1

  # Include test files or not.
  # Default: true
  tests: true

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: true

  # Default empty, allowed options are readonly, vendor and mod. 
  modules-download-mode: vendor

  # Define the Go version limit.
  # Mainly related to generics support since go1.18.
  # Default: use Go version from the go.mod file, fallback on the env var `GOVERSION`, fallback on 1.18
  # Intentionally left empty to use go.mod's Go version
  go: ""



issues:
  # Set to 0 to not skip any issues.
  max-issues-per-linter: 0

  # Set to 0 to not skip any issues.
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing large codebase.
  # It's not practical to fix all existing issues at the moment of integration:
  # much better don't allow issues in new code.
  #
  # Default: false.
  new: false



output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions|teamcity
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.xml,json:stdout,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number:stdout

  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true

  # Sort results by: filepath, then line, then column.
  sort-results: true

  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false

  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true



linters:
  # Disable all linters.
  # Default: false
  disable-all: true

  # Run only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  fast: false
  
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - dogsled
    - errcheck
    - exportloopref
    - ginkgolinter
    - gocheckcompilerdirectives
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofumpt
    - gomnd
    - gosimple
    - govet
    - ineffassign
    - misspell
    - paralleltest
    - staticcheck
    - typecheck
    - unused
    - wsl
