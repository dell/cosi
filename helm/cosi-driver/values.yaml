# Copyright Â© 2023 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

# Default values for cosi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Driver config contains the yaml configuration with list of object storage connections

replicaCount: 1

provisioner:
  name: "objectstorage-provisioner"
  config: {}
  # COSI driver log level
  # Possible values: "trace" "debug" "info" "warn" "error" "fatal" "panic"
  # Default value: "debug"
  logLevel: "debug"
  image:
    repository: ""
    tag: ""
    pullPolicy: "IfNotPresent"

sidecar:
  name: "objectstorage-provisioner-sidecar"
  image:
    repository: "gcr.io/k8s-staging-sig-storage/objectstorage-sidecar/objectstorage-sidecar"
    tag: "v20230130-v0.1.0-24-gc0cf995"
    pullPolicy: "IfNotPresent"

# Provisioner configuration can be created with --set-file configuration.data=path/to/config.yaml
# or created manually and provided with --set configuration.name=existing-secret-name
configuration:
  # Specifies whether a secret with driver configuration should be created
  # If set to false, you must set `configuration.name` field to an existing configuration secret name.
  create: true
  annotations: {}
  # Override name of the secret or specify an existing secret name
  name: ""
  # If data is provided when installing chart, it will be used to create the Secret with the driver configuration
  data: {}

rbac:
  # Specifies whether RBAC resources should be created.
  # If set to false, you must set `rbac.serviceAccount.name` field to an existing ServiceAccount name.
  create: true
  role:
    # Specifies whether a Role should be created
    create: true
    # Annotations to add to the Role
    annotations: {}
    # The name of the Role to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  roleBinding:
    # Specifies whether a RoleBinding should be created
    create: true
    # Annotations to add to the RoleBinding
    annotations: {}
    # The name of the RoleBinding to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  serviceAccount:
    # Specifies whether a ServiceAccount should be created
    create: true
    # Annotations to add to the ServiceAccount
    annotations: {}
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #   - ALL

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
