name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, pub/** ] 
jobs:
  code-check:
    name: Check formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./pkg/...

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3.2.0
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-dir=core -exclude-dir=tests ./... 

  malware_security_scan:
      name: Malware Scanner
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v3.2.0
        - name: Malware Scanner
          uses: dell/common-github-actions/malware-scanner@main
          with:
            directories: .
            options: -ri

  code-sanitizer:
    name: Check for forbidden words
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the forbidden words scan
        uses: dell/common-github-actions/code-sanitizer@main
        with:
          args: /github/workspace/pkg

  tests:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@main
        with:
          threshold: 90
          test-folder: "."
          skip-list: "github.com/dell/cosi-driver/core,github.com/dell/cosi-driver/tests/integration/main_test"

  build-secure-and-push:
    runs-on: ubuntu-latest
    env: 
      IMAGETAG: "${{ github.sha }}"
      IMAGENAME: "cosi-driver"
      REGISTRY: "sample_registry"
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: ^1.19
        id: go
    - uses: actions/checkout@v3.2.0
    - run: make docker
    # TODO: Analyze and fix vulnerabilities
    # - uses: Azure/container-scan@v0
    #   env: 
    #     DOCKLE_HOST: "unix:///var/run/docker.sock"
    #   with:
    #     image-name: ${{ env.REGISTRY }}/${{ env.IMAGENAME }}:${{ env.IMAGETAG }}
    #     severity-threshold: HIGH
    # TODO: There is no registry for now 
    # - run: make push
    # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }} 
