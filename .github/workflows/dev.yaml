name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]
jobs:
  code-check:
    name: Check formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./pkg/...

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3.2.0
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-dir=core -exclude-dir=tests ./...

  malware_security_scan:
      name: Malware Scanner
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v3.2.0
        - name: Malware Scanner
          uses: dell/common-github-actions/malware-scanner@main
          with:
            directories: .
            options: -ri

  code-sanitizer:
    name: Check for forbidden words
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run the forbidden words scan
        uses: dell/common-github-actions/code-sanitizer@main
        with:
          args: /github/workspace/pkg

  dockerfile-linter:
    name: Run Hadolint Dockerfile lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0

  tests:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.2.0
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@main
        with:
          threshold: 90
          test-folder: "."
          skip-list: "github.com/dell/cosi-driver/core,github.com/dell/cosi-driver/tests/integration/main_test"

  build-secure-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGETAG: "${{ github.sha }}"
      IMAGENAME: "cosi-driver"
      REGISTRY: "sample_registry"
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: ^1.20
        id: go
    - uses: actions/checkout@v3.2.0
    - run: make docker
    - name: Run trivy action
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGENAME }}:${{ env.IMAGETAG }}
        severity: HIGH
    - name: Run dockle action
      uses: erzz/dockle-action@v1.3.1
      with:
        image: ${{ env.IMAGENAME }}:${{ env.IMAGETAG }}
    # TODO: There is no registry for now
    # - run: make push
    # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
