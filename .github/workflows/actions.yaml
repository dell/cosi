name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ] 
jobs:
  code-check:
    name: Check formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./...

  gosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-dir=core ./... 

  malware_security_scan:
      name: Malware Scanner
      runs-on: ubuntu-latest
      steps:
        - name: Checkout the code
          uses: actions/checkout@v2
        - name: Malware Scanner
          uses: dell/common-github-actions/malware-scanner@main
          with:
            directories: .
            options: -ri

  code-sanitizer:
    name: Check for forbidden words
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run the forbidden words scan
        uses: dell/common-github-actions/code-sanitizer@main
        with:
          args: /github/workspace

  tests:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@main
        with:
          threshold: 90
          test-folder: "."
          skip-list: "github.com/dell/cosi-driver/core" #TODO: remove if code will appear 

  build-secure-and-push:
    runs-on: ubuntu-latest
    env:
      CONTAINER_REGISTRY: TODO.regitry #TODO: provide registry
    steps:
     - name: Set up Go 1.19+
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19
        id: go
    - uses: actions/checkout@master
    - run: docker build . -t cosi-driver:latest
    - uses: Azure/container-scan@v0
      with:
        image-name: cosi-driver:latest
    - name: Scan operator Image
      uses: Azure/docker-login@v1
      env: 
          DOCKLE_HOST: "unix:///var/run/docker.sock"
        with:
          image-name: dell-csi-operator:latest
          severity-threshold: HIGH
    # - run: make docker && docker push
    # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
