// Code generated by gowrap. DO NOT EDIT.
// template: https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry
// gowrap: http://github.com/hexdigest/gowrap

package objectscale

//go:generate gowrap gen -p github.com/dell/cosi-driver/pkg/provisioner/objectscale -i virtualInterface -t https://raw.githubusercontent.com/hexdigest/gowrap/6c8f05695fec23df85903a8da0af66ac414e2a63/templates/opentelemetry -o objectscale_with_metrics.go -l ""

import (
	"go.opentelemetry.io/otel/trace"
)

// virtualInterfaceWithTracing implements virtualInterface interface instrumented with opentracing spans
type virtualInterfaceWithTracing struct {
	virtualInterface
	_instance      string
	_spanDecorator func(span trace.Span, params, results map[string]interface{})
}

// NewvirtualInterfaceWithTracing returns virtualInterfaceWithTracing
func NewvirtualInterfaceWithTracing(base virtualInterface, instance string, spanDecorator ...func(span trace.Span, params, results map[string]interface{})) virtualInterfaceWithTracing {
	d := virtualInterfaceWithTracing{
		virtualInterface: base,
		_instance:        instance,
	}

	if len(spanDecorator) > 0 && spanDecorator[0] != nil {
		d._spanDecorator = spanDecorator[0]
	}

	return d
}
